#!/bin/bash
# ----------------------------------------------------------------------------------------
# Johannes Gebert - Doctoral project - set environment
#
# Author:    Johannes Gebert - HLRS - NUM - gebert@hlrs.de
# Created:   10.05.2021
# Last edit: 01.03.2022
# ----------------------------------------------------------------------------------------
# Set colors for text output
# The colorization of the output is only turned on, if the environment variable SITE_NAME
# is set to "julius". It needs configuration for example in the ~/.bashrc or the ~/.zshrc.
# If you like to set up your system this way, please ensure the terminal colorizes the
# output properly.
# ----------------------------------------------------------------------------------------
if [[ "$SITE_NAME" == "julius" ]]; then
    red='\033[0;31m'
    green='\033[0;32m'
    yellow='\033[0;33m'
    nc='\033[0m'
else
# Expected "HLRS" to be given for "SITE_NAME".
# If SITE_NAME is not given, it is assumend, that the terminal understands colorizing :-)
    red=''
    green=''
    yellow=''
    nc=''
fi
# ----------------------------------------------------------------------------------------
# System environment files
#
sys_env_path='geb-lib/auxiliaries/system_environments/'
# ----------------------------------------------------------------------------------------
#
usage ()
{
    echo "-- "
    echo "-- Usage: "
    echo "--      source environment.source <system>"
    echo "-- "
    echo "-- Environments available:"
    echo "--      ${green}hawk${nc}   - HLRS HPE Apollo"
    echo "--      ${green}vulcan${nc} - HLRS NEC Cluster"
    echo "--      ${green}julius${nc} - A Whiskey Lake Notebook, 4 cores, 16Gb memory, APU"
    echo "-- "
    echo "--      Appending --no-output suppresses all output."
    echo "-- "
    echo "--------------------------------------------------------------------------------"
}
#
#------------------------------------------------------------------------------
prefix=$PWD
#
if [ -z "$1" ]; then
    usage
else
    #
    if [ "$2" != "--no-output" ]; then
        echo "--------------------------------------------------------------------------------"
        echo "-- ${green}Setting environment${nc} for system: $1"
        echo "--"
    fi
    #
    #------------------------------------------------------------------------------
    # Check current directory first
    if [ ! -d "$PWD/"${sys_env_path} ]; then
        echo "-- Sys env directories do not exist."
    fi
    #
    #------------------------------------------------------------------------------
    # Read the system environment directory
    sys_set=0
    #
    for sys_file in "${sys_env_path}"*.env
    do
    [[ -e "$sys_file" ]] || break  # handle the case of no *.wav files
        system=$(basename -s .env "$sys_file")
        #
        # shellcheck source=/dev/null
        test "$system" = "$1" && source "${sys_file}" && sys_set=1
        #
        # System
        export SYS_ENV="$1"
    done

    if [ $sys_set -eq 0 ]; then
       echo "--"
       echo "-- ${yellow}System ${red}$1 ${yellow}currently is not supported.${nc}"
       usage
    else
        # PATH extensions
        export PATH=${prefix}/bin:$PATH
        #
        if [ "$2" != "--no-output" ]; then
            echo "-- ${green}Done${nc}"
            echo "--------------------------------------------------------------------------------"
        fi
    fi
fi